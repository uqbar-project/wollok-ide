# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node-version: [lts/hydrogen]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn
      - name: Run tests
        if: matrix.os != 'ubuntu-latest'
        uses: coactions/setup-xvfb@v1
        with:
          run: yarn coverage
      - name: Run tests
        if: matrix.os == 'ubuntu-latest'
        uses: coactions/setup-xvfb@v1
        with:
          run: yarn compile-tests && yarn test:unit
      - name: Build coverage
        if: matrix.os == 'windows-latest'
        uses: coactions/setup-xvfb@v1
        with:
          run: yarn build-coverage-report
      - name: Update coverage
        uses: codecov/codecov-action@v4
        if: matrix.os == 'windows-latest'
        with:
          files: ./coverage-total/coverage.json
          verbose: true
          codecov_yml_path: ./codecov.yml
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      - name: Generate VSIX file
        if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/master'
        run: |
          yarn package
      - name: Add VSIX to the latest release
        if: matrix.os == 'ubuntu-latest' && github.ref == 'refs/heads/master'
        uses: 'marvinpinto/action-automatic-releases@latest'
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          automatic_release_tag: 'draft'
          prerelease: true
          title: 'Draft'
          files: |
            ./*.vsix
